const f={above:{index:function(n,t){return n.above(t)},filter:function(n,t){return n>t}},aboveOrEqual:{index:function(n,t){return n.aboveOrEqual(t)},filter:function(n,t){return n>=t}},anyOf:{index:function(n,t){return n.anyOf(t)},filter:function(n,t){return t.includes(n)}},anyOfIgnoreCase:{index:function(n,t){return n.anyOfIgnoreCase(t)},filter:function(n,t){return t.find(r=>String(r).toLowerCase()==n)}},below:{index:function(n,t){return n.below(t)},filter:function(n,t){return n<t}},belowOrEqual:{index:function(n,t){return n.belowOrEqual(t)},filter:function(n,t){return n<=t}},between:{index:function(n,[t,r,e,i]){return n.between(t,r,e,i)},filter:function(n,[t,r,e,i]){let o=e?t-1:t,u=i?r+1:r;return n>o&&n<u}},equals:{index:function(n,t){return n.equals(t)},filter:function(n,t){return n===t}},equalsIgnoreCase:{index:function(n,t){return n.equalsIgnoreCase(t)},filter:function(n,t){return String(n).toLowerCase()===String(t).toLowerCase()}},noneOf:{index:function(n,t){return n.noneOf(t)},filter:function(n,t){return!t.includes(n)}},noneOfIgnoreCase:{index:function(n,t){return n.anyOfIgnoreCase(t)},filter:function(n,t){return!t.find(r=>String(r).toLowerCase()==String(n).toLowerCase())}},notEqual:{index:function(n,t){return n.notEqual(t)},filter:function(n,t){return n!==t}},startsWith:{index:function(n,t){return n.startsWith(t)},filter:function(n,t){return String(n).startsWith(t)}},startsWithIgnoreCase:{index:function(n,t){return n.startsWithIgnoreCase(t)},filter:function(n,t){return String(n).toLowerCase().startsWith(String(t).toLowerCase())}},startsWithAnyOf:{index:function(n,t){return n.startsWithAnyOf(t)},filter:function(n,t){return t.find(r=>String(n).startsWith(r))}},startsWithAnyOfIgnoreCase:{index:function(n,t){return n.startsWithAnyOfIgnoreCase(t)},filter:function(n,t){return t.find(r=>String(n).toLowerCase().startsWith(String(r).toLowerCase()))}}};export{f as filters};
